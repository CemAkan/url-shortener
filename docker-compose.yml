version: "3.9"

services:
  app:
    build: .
    container_name: url-shortener
    ports:
      - "${APP_PORT}:3000"        # External port APP_PORT maps to container port 3000 (Go app port)
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - proxy
      - internal
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:16-alpine
    container_name: pg-shortener
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"        # External port DB_PORT maps to container port 5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis-shortener
    ports:
      - "6379:6379"              # Redis default port
    volumes:
      - redisdata:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --rule.file=/etc/prometheus/rules.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    restart: unless-stopped

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  pgdata:
  redisdata:
  prometheus_data:

networks:
  proxy:
  internal: